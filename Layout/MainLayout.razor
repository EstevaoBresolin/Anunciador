@inherits LayoutComponentBase

@using System.Text
@using System.Text.Json
@using System.Globalization
@using AnunciadorV1.Services
@inject NavigationManager navigation
@inject FirestoreService FirestoreService

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />

<div class="main">

    <!-- Menu de Navegação -->
    <MudPaper Class="mud-background-secondary menu-bar">
        <div style="display: flex;justify-content: space-between;align-items: center;background: royalblue;position: absolute;width: 100vw;">
            <MudIconButton OnClick="OpenMenu" Icon="@Icons.Material.Filled.Menu" Color="Color.Default" style="color: white !important;" />
            <MudLink Href="@navigation.BaseUri" style="font-size: 1rem; color: white !important;">Conecte Membros</MudLink>
            @if (!String.IsNullOrEmpty(FirestoreService.NomeUsuario)){
                <MudIconButton style="color: white !important;" Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Default" OnClick="Logout" />
            }
            else{
                <MudIconButton style="color: white !important;" Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Default" OnClick="Logar" />
            }


        </div>
        <MudContainer Style="padding-left: 0 !important; padding-right: 0 !important;" Class="menu d-flex justify-space-between align-center px-4">
            <!-- Ícone de Menu -->

            <!-- Links de Navegação -->
            @if (collapseNavMenu){

                <MudContainer Class="d-flex justify-center align-center menu-itens">
                    <MudLink Href="@navigation.BaseUri" Class="menu-item" OnClick="CloseMenu"><MudIcon Icon="@Icons.Material.Filled.AutoAwesomeMosaic" Title="Favorite" /> Todos os Departamentos</MudLink>
                    <MudLink Href="saudeEBeleza" Class="menu-item" OnClick="CloseMenu"><MudIcon Icon="@Icons.Material.Filled.AccessibilityNew" Title="Favorite" /> Saúde e Beleza</MudLink>
                    <MudLink Href="construcao" Class="menu-item" OnClick="CloseMenu"><MudIcon Icon="@Icons.Material.Filled.Construction" Title="Favorite" /> Construção</MudLink>
                    <MudLink Href="financeiro" Class="menu-item" OnClick="CloseMenu"><MudIcon Icon="@Icons.Material.Filled.AttachMoney" Title="Favorite" /> Financeiro</MudLink>
                    <MudLink Href="consultoria" Class="menu-item" OnClick="CloseMenu"><MudIcon Icon="@Icons.Material.Filled.Assessment" Title="Favorite" />Consultoria</MudLink>
                    <MudLink Href="alimentacao" Class="menu-item" OnClick="CloseMenu"><MudIcon Icon="@Icons.Material.Filled.Fastfood" Title="Favorite" />Alimentação</MudLink>
                    <MudLink Href="informatica" Class="menu-item" OnClick="CloseMenu"><MudIcon Icon="@Icons.Material.Filled.Computer" Title="Favorite" />Informática</MudLink>
                    @if (FirestoreService.IsAuthenticated)
                    {
                        <MudLink Href="cadastrarAnunciante" Class="menu-item" OnClick="CloseMenu"><MudIcon Icon="@Icons.Material.Filled.AccountCircle" Title="Favorite" />Cadastrar Anunciante</MudLink>
                    }

                    <div class="infos">
                        <p>Conecte Membros</p>
                        <p>Versão 1.0.0</p>
                    </div>

                </MudContainer>

            }

        </MudContainer>
    </MudPaper>

    <main style="padding-top: 3rem;">
        <article class="@(navigation.Uri.Contains("login") ? "" : navigation.Uri.Contains("registrar") ? "" : navigation.Uri.Contains("esqueceuSenha") ? "" : "content px-4")">
            @Body
        </article>
    </main>
</div>

@code {

    private bool _isDarkMode;
    private bool expand = false;
    private bool _drawerOpen = true;
    private bool collapseNavMenu = false;

    private string searchString1 = "";
    private string currentIcon = Icons.Material.Filled.DarkMode;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private MudTheme _theme;
    private MudTheme LightTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#424242",
            Secondary = "#FFFFFF",
        }
    };
    private MudTheme DarkTheme = new MudTheme()
    {
        PaletteDark = new PaletteDark()
        {
            Primary = "#FFFFFF7F",
            Secondary = "#000000"
        }
    };

    private void Logar()
    {
        navigation.NavigateTo("login");
    }

    private void Logout()
    {
        FirestoreService.SetAuthenticated(false);
        FirestoreService.NomeUsuario = "";
        navigation.NavigateTo("/", forceLoad: true);
    }

    private void OpenMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void CloseMenu()
    {
        collapseNavMenu = false;
        StateHasChanged(); // Garante a atualização do estado da UI
    }

    private void ToggleTheme()
    {
        _theme = _theme == LightTheme ? DarkTheme : LightTheme;
        
        currentIcon = _theme == LightTheme ? Icons.Material.Filled.DarkMode : Icons.Material.Filled.LightMode;
    }

    public void DarkMode()
    {
        _isDarkMode = !_isDarkMode;

        if (_isDarkMode)
        {
            currentIcon = Icons.Material.Filled.LightMode;
        }
        else
        {
            currentIcon = Icons.Material.Filled.DarkMode;
        }
    }

}


<style>

    .menu{
        width: 100% !important;
        @@media(max-width: 700px) {
            flex-direction: column;
        }
    }

    .menu-itens {
        margin-top: 3rem;

        @@media(max-width: 700px) {
            flex-direction: column;
            padding-bottom: 2rem;
            height: 100vh;
            z-index: 3;
            justify-content: start !important;
            align-items: flex-start !important;
        }
    }

    .infos{
        width: 85%;
        text-align: center;
        bottom: 50px;
        margin-bottom: 1rem;
        position: fixed;
        margin-left: -16px;

        @@media(min-width: 700px) {
            display: none;   
        }
    }

    /* //// MENU ////// */
    .menu-bar {
        width: 100%;
        position: sticky;
        top: 0;
        z-index: 1000;
        border-bottom: 1px solid #ddd;

        @@media(max-width: 700px) {
            width: 85%;
            position: fixed;
        }

        @@media (min-width: 1280px)
        {
            .mud-container-maxwidth-lg
            {
                max-width: 100% !important;
            }
        }
    }

    .menu-item {
        color: #494949 !important;
        text-decoration: none;
        font-weight: bold;
        padding: 1rem;
        width: fit-content;
        display: flex;
        gap: 5px;

        @@media(max-width: 700px) {
            border-bottom: 0.5px solid #d7d7d7;
            width: 100%;
        }
    }

        .menu-item:hover {
            cursor: pointer;
            background: aliceblue;
        }
    /* //// MENU ////// */

    .card {
        font-family: Arial, sans-serif;
        background-color: #fff;
        width: 18rem;
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);

        @@media(max-width: 700px) {
            width: 100%;
        }
    }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }


    .card-title {
        font-size: 1.25rem;
        color: #333;
    }

    .card-text {
        font-size: 1rem;
        color: #666;
    }

    .container {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        margin-top: 1rem;
        @@media(max-width: 700px) {
            width: 100%;
            flex-direction: column;
        }
    }
</style>


